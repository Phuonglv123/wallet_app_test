{"ast":null,"code":"import { connect } from \"react-redux\";\nimport config from \"../config/config\";\nimport axios from \"axios\";\nimport { authHeader } from \"../helper/authHeader\";\nimport AppURL from \"../components/AppRoute/AppURL\";\nexport class BaseAPI {\n  constructor() {\n    this.apiUrl = config.API_URL;\n  }\n\n  setToken() {\n    const token = this.props.user.token;\n    return token;\n  }\n\n  async apiCall(option) {\n    option.method = option.hasOwnProperty('method') ? option.method : 'GET';\n    option.params = option.hasOwnProperty('params') ? option.params : null;\n    option.returnRaw = option.hasOwnProperty('returnRaw') ? option.returnRaw : false;\n\n    if (option.params) {\n      for (let key in option.params) {\n        if (option.params[key] === null) {\n          delete option.params[key];\n        }\n\n        if (option.params[key] === '') {\n          delete option.params[key];\n        }\n      }\n    }\n\n    try {\n      const res = await axios({\n        method: option.method,\n        headers: authHeader(),\n        url: \"\".concat(this.apiUrl).concat(option.url),\n        data: option.params,\n        validateStatus: status => {\n          return true;\n        }\n      });\n\n      if (res.status >= 300) {// Modal.error({\n        //     title: 'Error',\n        //     content: 'Something wrong happen, please contact support',\n        // });\n      }\n\n      if (res.status === 401) {\n        localStorage.removeItem('user'); // window.location = AppUrl.login();\n      }\n\n      if (option.returnRaw) {\n        return res;\n      } else {\n        return res.data;\n      }\n    } catch (e) {\n      alert(e);\n      return {\n        data: null,\n        error: {}\n      };\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const users = state.users,\n        authentication = state.authentication;\n  const user = authentication.user;\n  return {\n    users,\n    user\n  };\n}\n\nconst connectAPI = connect(mapStateToProps)(BaseAPI);\nexport default connectAPI;","map":{"version":3,"sources":["/Volumes/Phuong/project/wallet_app/src/services/BaseAPI.js"],"names":["connect","config","axios","authHeader","AppURL","BaseAPI","constructor","apiUrl","API_URL","setToken","token","props","user","apiCall","option","method","hasOwnProperty","params","returnRaw","key","res","headers","url","data","validateStatus","status","localStorage","removeItem","e","alert","error","mapStateToProps","state","users","authentication","connectAPI"],"mappings":"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","sourcesContent":["import {connect} from \"react-redux\";\nimport config from \"../config/config\";\nimport axios from \"axios\";\nimport {authHeader} from \"../helper/authHeader\";\nimport AppURL from \"../components/AppRoute/AppURL\";\n\nexport class BaseAPI {\n    constructor() {\n        this.apiUrl = config.API_URL;\n    }\n\n    setToken() {\n        const token = this.props.user.token;\n        return token;\n    }\n\n\n    async apiCall(option: Option) {\n        option.method = option.hasOwnProperty('method') ? option.method : 'GET';\n        option.params = option.hasOwnProperty('params') ? option.params : null;\n        option.returnRaw = option.hasOwnProperty('returnRaw') ? option.returnRaw : false;\n        if (option.params) {\n            for (let key in option.params) {\n                if (option.params[key] === null) {\n                    delete option.params[key]\n                }\n                if (option.params[key] === '') {\n                    delete option.params[key]\n                }\n            }\n        }\n        try {\n            const res = await axios({\n                method: option.method,\n                headers: authHeader(),\n                url: `${this.apiUrl}${option.url}`,\n                data: option.params,\n                validateStatus: status => {\n                    return true;\n                },\n            });\n            if (res.status >= 300) {\n                // Modal.error({\n                //     title: 'Error',\n                //     content: 'Something wrong happen, please contact support',\n                // });\n            }\n            if (res.status === 401) {\n                localStorage.removeItem('user')\n                // window.location = AppUrl.login();\n            }\n            if (option.returnRaw) {\n                return res;\n            } else {\n                return res.data;\n            }\n        } catch (e) {\n            alert(e)\n            return {\n                data: null,\n                error: {}\n            }\n        }\n    }\n}\n\nexport type Option = {\n    url: string,\n    method: string,\n    returnRaw: boolean,\n    params: Object\n}\n\n\nfunction mapStateToProps(state) {\n    const {users, authentication} = state;\n    const {user} = authentication;\n    return {\n        users,\n        user\n    }\n\n}\n\nconst connectAPI = connect(mapStateToProps)(BaseAPI);\nexport default connectAPI;\n"]},"metadata":{},"sourceType":"module"}