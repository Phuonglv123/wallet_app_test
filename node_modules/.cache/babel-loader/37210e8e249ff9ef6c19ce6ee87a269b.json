{"ast":null,"code":"import _objectWithoutProperties from \"/Volumes/Phuong/project/wallet_app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Volumes/Phuong/project/wallet_app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { userConstant } from '../constants/userConstant';\nconst initialState = {\n  items: []\n};\nexport function accountBank(state = initialState, action) {\n  switch (action.type) {\n    case userConstant.GETACCOUNTBANK_REQUEST:\n      return {\n        loading: true\n      };\n\n    case userConstant.GETACCOUNTBANK_SUCCESS:\n      return {\n        items: action.accountBank\n      };\n\n    case userConstant.GETACCOUNTBANK_FAILURE:\n      return {\n        error: action.error\n      };\n\n    case userConstant.DELETE_REQUEST:\n      // add 'deleting:true' property to user being deleted\n      return _objectSpread({}, state, {\n        items: state.items.map(accountBank => accountBank.id === action.id ? _objectSpread({}, accountBank, {\n          deleting: true\n        }) : accountBank)\n      });\n\n    case userConstant.DELETE_SUCCESS:\n      // remove deleted user from state\n      return {\n        items: state.items.filter(accountBank => accountBank.id !== action.id)\n      };\n\n    case userConstant.DELETE_FAILURE:\n      // remove 'deleting:true' property and add 'deleteError:[error]' property to user\n      return _objectSpread({}, state, {\n        items: state.items.map(accountBank => {\n          if (accountBank.id === action.id) {\n            // make copy of user without 'deleting:true' property\n            const deleting = accountBank.deleting,\n                  userCopy = _objectWithoutProperties(accountBank, [\"deleting\"]); // return copy of user with 'deleteError:[error]' property\n\n\n            return _objectSpread({}, userCopy, {\n              deleteError: action.error\n            });\n          }\n\n          return accountBank;\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Volumes/Phuong/project/wallet_app/src/reducers/accountBankReducer.js"],"names":["userConstant","initialState","items","accountBank","state","action","type","GETACCOUNTBANK_REQUEST","loading","GETACCOUNTBANK_SUCCESS","GETACCOUNTBANK_FAILURE","error","DELETE_REQUEST","map","id","deleting","DELETE_SUCCESS","filter","DELETE_FAILURE","userCopy","deleteError"],"mappings":";;;;;;;AAAA,SAAQA,YAAR,QAA2B,2BAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,OAAO,SAASC,WAAT,CAAqBC,KAAK,GAAGH,YAA7B,EAA2CI,MAA3C,EAAmD;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,YAAY,CAACO,sBAAlB;AACI,aAAO;AACHC,QAAAA,OAAO,EAAE;AADN,OAAP;;AAGJ,SAAKR,YAAY,CAACS,sBAAlB;AACI,aAAO;AACHP,QAAAA,KAAK,EAAEG,MAAM,CAACF;AADX,OAAP;;AAGJ,SAAKH,YAAY,CAACU,sBAAlB;AACI,aAAO;AACHC,QAAAA,KAAK,EAAEN,MAAM,CAACM;AADX,OAAP;;AAGJ,SAAKX,YAAY,CAACY,cAAlB;AACI;AACA,+BACOR,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYW,GAAZ,CAAgBV,WAAW,IAC9BA,WAAW,CAACW,EAAZ,KAAmBT,MAAM,CAACS,EAA1B,qBACUX,WADV;AACuBY,UAAAA,QAAQ,EAAE;AADjC,aAEMZ,WAHH;AAFX;;AAQJ,SAAKH,YAAY,CAACgB,cAAlB;AACI;AACA,aAAO;AACHd,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYe,MAAZ,CAAmBd,WAAW,IAAIA,WAAW,CAACW,EAAZ,KAAmBT,MAAM,CAACS,EAA5D;AADJ,OAAP;;AAGJ,SAAKd,YAAY,CAACkB,cAAlB;AACI;AACA,+BACOd,KADP;AAEIF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYW,GAAZ,CAAgBV,WAAW,IAAI;AAClC,cAAIA,WAAW,CAACW,EAAZ,KAAmBT,MAAM,CAACS,EAA9B,EAAkC;AAC9B;AAD8B,kBAEvBC,QAFuB,GAEEZ,WAFF,CAEvBY,QAFuB;AAAA,kBAEVI,QAFU,4BAEEhB,WAFF,iBAG9B;;;AACA,qCAAWgB,QAAX;AAAqBC,cAAAA,WAAW,EAAEf,MAAM,CAACM;AAAzC;AACH;;AAED,iBAAOR,WAAP;AACH,SATM;AAFX;;AAaJ;AACI,aAAOC,KAAP;AA5CR;AA8CH","sourcesContent":["import {userConstant} from '../constants/userConstant';\n\nconst initialState = {\n    items: []\n}\n\nexport function accountBank(state = initialState, action) {\n    switch (action.type) {\n        case userConstant.GETACCOUNTBANK_REQUEST:\n            return {\n                loading: true\n            };\n        case userConstant.GETACCOUNTBANK_SUCCESS:\n            return {\n                items: action.accountBank\n            };\n        case userConstant.GETACCOUNTBANK_FAILURE:\n            return {\n                error: action.error\n            };\n        case userConstant.DELETE_REQUEST:\n            // add 'deleting:true' property to user being deleted\n            return {\n                ...state,\n                items: state.items.map(accountBank =>\n                    accountBank.id === action.id\n                        ? {...accountBank, deleting: true}\n                        : accountBank\n                )\n            };\n        case userConstant.DELETE_SUCCESS:\n            // remove deleted user from state\n            return {\n                items: state.items.filter(accountBank => accountBank.id !== action.id)\n            };\n        case userConstant.DELETE_FAILURE:\n            // remove 'deleting:true' property and add 'deleteError:[error]' property to user\n            return {\n                ...state,\n                items: state.items.map(accountBank => {\n                    if (accountBank.id === action.id) {\n                        // make copy of user without 'deleting:true' property\n                        const {deleting, ...userCopy} = accountBank;\n                        // return copy of user with 'deleteError:[error]' property\n                        return {...userCopy, deleteError: action.error};\n                    }\n\n                    return accountBank;\n                })\n            };\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}