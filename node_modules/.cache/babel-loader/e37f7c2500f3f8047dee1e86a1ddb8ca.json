{"ast":null,"code":"import { userConstant } from '../constants/userConstant';\nimport { history } from '../helper/history';\nimport AppURL from \"../components/AppRoute/AppURL\";\nimport { authHeader } from \"../helper/authHeader\";\nimport Auth from \"../services/Auth\";\nimport userServices from \"../services/userServices\";\nimport axios from 'axios';\nexport const userActions = {\n  login,\n  logout,\n  getAll,\n  getBankAccount\n};\n\nfunction login({\n  username,\n  password,\n  secCode\n}) {\n  return dispatch => {\n    dispatch(request());\n    Auth.login({\n      username,\n      password,\n      secCode\n    }).then(res => {\n      dispatch(success(res));\n      Auth.saveUser(res.id_token);\n      authHeader(res.id_token);\n      history.push(AppURL.home());\n    }).catch(error => {\n      dispatch(failure(error));\n    });\n  };\n\n  function request(user) {\n    return {\n      type: userConstant.LOGIN_REQUEST,\n      user\n    };\n  }\n\n  function success(user) {\n    return {\n      type: userConstant.LOGIN_SUCCESS,\n      user\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstant.LOGIN_FAILURE,\n      error\n    };\n  }\n}\n\nfunction logout() {\n  Auth.logOut();\n  history.push(AppURL.login());\n  return {\n    type: userConstant.LOGOUT\n  };\n} // function register(user) {\n//     return dispatch => {\n//         dispatch(request(user));\n//\n//         userService.register(user)\n//             .then(\n//                 user => {\n//                     dispatch(success());\n//                     history.push('/login');\n//                     dispatch(alertAction.success('Registration successful'));\n//                 },\n//                 error => {\n//                     dispatch(failure(error));\n//                     dispatch(alertAction.error(error));\n//                 }\n//             );\n//     };\n//\n//     function request(user) {\n//         return {type: userConstant.REGISTER_REQUEST, user}\n//     }\n//\n//     function success(user) {\n//         return {type: userConstant.REGISTER_SUCCESS, user}\n//     }\n//\n//     function failure(error) {\n//         return {type: userConstant.REGISTER_FAILURE, error}\n//     }\n// }\n\n\nfunction getAll() {\n  return dispatch => {\n    dispatch(request());\n    userServices.getAllUser().then(users => {\n      dispatch(success(users));\n      return users;\n    }).catch(error => {\n      dispatch(failure(error));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstant.GETALL_REQUEST\n    };\n  }\n\n  function success(users) {\n    return {\n      type: userConstant.GETALL_SUCCESS,\n      users\n    };\n  }\n\n  function failure(error) {\n    return {\n      type: userConstant.GETALL_FAILURE,\n      error\n    };\n  }\n}\n\nfunction getBankAccount() {\n  return dispatch => {\n    dispatch(request());\n    userServices.getBankAccount().then(accountBank => {\n      dispatch(success(accountBank));\n      return accountBank;\n    }).catch(error => {\n      dispatch(failure(error));\n    });\n  };\n\n  function request() {\n    return {\n      type: userConstant.GETACCOUNTBANK_REQUEST\n    };\n  }\n\n  function success(accountBank) {\n    return {\n      type: userConstant.GETACCOUNTBANK_SUCCESS,\n      accountBank\n    };\n  }\n\n  function failure(accountBank) {\n    return {\n      type: userConstant.GETACCOUNTBANK_FAILURE,\n      accountBank\n    };\n  }\n} // prefixed function name with underscore because delete is a reserved word in javascript\n// function _delete(id) {\n//     return dispatch => {\n//         dispatch(request(id));\n//\n//         userService.delete(id)\n//             .then(\n//                 user => {\n//                     dispatch(success(id));\n//                 },\n//                 error => {\n//                     dispatch(failure(id, error));\n//                 }\n//             );\n//     };\n//\n//     function request(id) {\n//         return {type: userConstant.DELETE_REQUEST, id}\n//     }\n//\n//     function success(id) {\n//         return {type: userConstant.DELETE_SUCCESS, id}\n//     }\n//\n//     function failure(id, error) {\n//         return {type: userConstant.DELETE_FAILURE, id, error}\n//     }\n// }","map":{"version":3,"sources":["/Volumes/Phuong/project/wallet_app/src/actions/userAction.js"],"names":["userConstant","history","AppURL","authHeader","Auth","userServices","axios","userActions","login","logout","getAll","getBankAccount","username","password","secCode","dispatch","request","then","res","success","saveUser","id_token","push","home","catch","error","failure","user","type","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","logOut","LOGOUT","getAllUser","users","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","accountBank","GETACCOUNTBANK_REQUEST","GETACCOUNTBANK_SUCCESS","GETACCOUNTBANK_FAILURE"],"mappings":"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","sourcesContent":["import {userConstant} from '../constants/userConstant';\nimport {history} from '../helper/history';\nimport AppURL from \"../components/AppRoute/AppURL\";\nimport {authHeader} from \"../helper/authHeader\";\nimport Auth from \"../services/Auth\";\nimport userServices from \"../services/userServices\";\nimport axios from 'axios';\n\nexport const userActions = {\n    login,\n    logout,\n    getAll,\n    getBankAccount\n};\n\nfunction login({username, password, secCode}) {\n    return dispatch => {\n        dispatch(request());\n        Auth.login({username, password, secCode})\n            .then((res) => {\n                dispatch(success(res));\n                Auth.saveUser(res.id_token);\n                authHeader(res.id_token);\n                history.push(AppURL.home())\n            })\n            .catch((error) => {\n                dispatch(failure(error))\n            })\n    };\n\n    function request(user) {\n        return {type: userConstant.LOGIN_REQUEST, user}\n    }\n\n    function success(user) {\n        return {type: userConstant.LOGIN_SUCCESS, user}\n    }\n\n    function failure(error) {\n        return {type: userConstant.LOGIN_FAILURE, error}\n    }\n}\n\nfunction logout() {\n    Auth.logOut();\n    history.push(AppURL.login());\n    return {type: userConstant.LOGOUT}\n\n}\n\n// function register(user) {\n//     return dispatch => {\n//         dispatch(request(user));\n//\n//         userService.register(user)\n//             .then(\n//                 user => {\n//                     dispatch(success());\n//                     history.push('/login');\n//                     dispatch(alertAction.success('Registration successful'));\n//                 },\n//                 error => {\n//                     dispatch(failure(error));\n//                     dispatch(alertAction.error(error));\n//                 }\n//             );\n//     };\n//\n//     function request(user) {\n//         return {type: userConstant.REGISTER_REQUEST, user}\n//     }\n//\n//     function success(user) {\n//         return {type: userConstant.REGISTER_SUCCESS, user}\n//     }\n//\n//     function failure(error) {\n//         return {type: userConstant.REGISTER_FAILURE, error}\n//     }\n// }\n\nfunction getAll() {\n    return dispatch => {\n        dispatch(request());\n        userServices.getAllUser()\n            .then((users) => {\n                dispatch(success(users));\n                return users;\n            })\n            .catch((error) => {\n                dispatch(failure(error))\n            });\n    };\n\n    function request() {\n        return {type: userConstant.GETALL_REQUEST}\n    }\n\n    function success(users) {\n        return {type: userConstant.GETALL_SUCCESS, users}\n    }\n\n    function failure(error) {\n        return {type: userConstant.GETALL_FAILURE, error}\n    }\n}\n\nfunction getBankAccount() {\n    return dispatch => {\n        dispatch(request());\n        userServices.getBankAccount()\n            .then(accountBank => {\n                dispatch(success(accountBank));\n                return accountBank;\n            })\n            .catch((error) => {\n                dispatch(failure(error))\n            })\n    };\n\n    function request() {\n        return {type: userConstant.GETACCOUNTBANK_REQUEST}\n    }\n\n    function success(accountBank) {\n        return {type: userConstant.GETACCOUNTBANK_SUCCESS, accountBank}\n    }\n\n    function failure(accountBank) {\n        return {type: userConstant.GETACCOUNTBANK_FAILURE, accountBank}\n    }\n}\n\n// prefixed function name with underscore because delete is a reserved word in javascript\n// function _delete(id) {\n//     return dispatch => {\n//         dispatch(request(id));\n//\n//         userService.delete(id)\n//             .then(\n//                 user => {\n//                     dispatch(success(id));\n//                 },\n//                 error => {\n//                     dispatch(failure(id, error));\n//                 }\n//             );\n//     };\n//\n//     function request(id) {\n//         return {type: userConstant.DELETE_REQUEST, id}\n//     }\n//\n//     function success(id) {\n//         return {type: userConstant.DELETE_SUCCESS, id}\n//     }\n//\n//     function failure(id, error) {\n//         return {type: userConstant.DELETE_FAILURE, id, error}\n//     }\n// }\n"]},"metadata":{},"sourceType":"module"}